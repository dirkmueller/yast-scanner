/**
 * File:	clients/scanner.ycp
 * Package:	Configuration of scanner
 * Summary:	Main file
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */

{

/***
 * <h3>Scanner Cconfiguration</h3>
 */

textdomain "scanner";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("Scanner module started");

import "CommandLine";
include "scanner/wizards.ycp";

// check test_mode
integer arg_n = size(WFM::Args()) - 1;

symbol test_status = `installed;

list arg_list = [];

boolean test_mode = false;

// start tests:
// gs@sturm: > y2base scanner '(.test)' ncurses
// gs@sturm: > y2base scanner '(.test_manual)' ncurses
// gs@sturm: > y2base scanner '(.test_new)' ncurses

while (arg_n >= 0) {
    if (WFM::Args(arg_n) == .test)
    {
	test_mode = true;
    }
    else if (WFM::Args(arg_n) == .test_new)
    {
	test_mode = true;
	test_status = `supported;
    }
    else if (WFM::Args(arg_n) == .test_manual)
    {
	test_mode = true;
	test_status = `detected;
    }
    else
    {
	arg_list = add(arg_list, WFM::Args(arg_n));
    }
    arg_n = arg_n - 1;
}

if ( test_mode )
{
    y2debug("Scanner TESTMODE");
    list connected_scanner = [];
    if ( test_status == `detected )
    {
	connected_scanner = [
			       $["bus":"USB",
				  "class_id":268,
				  "device":"Perfection 640",
				  "device_id":196876,
				  "scanner_status":test_status,
				  "resource":$["baud":[$["speed":1500000]]],
				  "rev":"0.01", "sub_class_id":0,
				  "sub_device":"Perfection640  ",
				  "sub_vendor":"EPSON",
				  "unique_key":"PTVH.9Hr5DGWrbRF",
				  "vendor":"Epson",
				  "vendor_id":197816],
			       $["bus":"SCSI",
				   "class_id":268,
				   "device":"UMAX 12G",
				   "device_id":196876,
				   "resource":$["baud":[$["speed":1500000]]],
				   "rev":"0.01", "sub_class_id":0,
				   "sub_device":"UMAX 12G  ",
				   "sub_vendor":"EPSON",
				   "unique_key":"PTVH.9Hr5DGWrbRF",
				   "vendor":"UMAX",
				   "vendor_id":197816 ] ];
    }
    else if ( test_status == `supported )
    {
	connected_scanner = [
			       $["bus":"USB",
				"class_id":268,
				"device":"Perfection 640",
				"device_id":196876,
				"scanner_status":test_status,
				"resource":$["baud":[$["speed":1500000]]],
				"rev":"0.01", "sub_class_id":0,
				"scanner_driver":"test123",
				"sub_device":"Perfection640  ",
				"sub_vendor":"EPSON",
				"unique_key":"PTVH.9Hr5DGWrbRF",
				"vendor":"Epson",
				"vendor_id":197816] ];
    }
    else
    {
	connected_scanner = [
			       $["bus":"Net",		// this is a network scan station
				"class_id":268,
				"device":"Perfection 640",
				"device_id":196876,
				"scanner_status":test_status,
				"dev_name":"/dev/sg0",		// dev_name on the scan station
				"host"	: "d142",			// hostname
				"resource":$["baud":[$["speed":1500000]]],
				"rev":"0.01", "sub_class_id":0,
				"sub_device":"Perfection640  ",
				"sub_vendor":"EPSON",
				"unique_key":"PTVH.9Hr5DGWrbRF",
				"vendor":"Epson",
				"vendor_id":197816] ];
    }

    list installed_scanner = [];
    if ( test_status == `supported || test_status == `detected )
    {
	installed_scanner = [$["bus":"USB",
				   "class_id":268,
				   "device":"Perfection 641",
				   "device_id":196876,
				   "resource":$["baud":[$["speed":1500000]]],
				   "rev":"0.01", "sub_class_id":0,
				   "sub_device":"Perfection641  ",
				   "scanner_driver":"test456",
				   "sub_vendor":"EPSON",
				   "unique_key":"PTVH.9Hr5DGWrbRF",
				   "vendor":"Epson",
				   "vendor_id":197816
				   ]];
    }
    else
    {
	installed_scanner = [$["bus":"USB",
				   "class_id":268,
				   "device":"Perfection 640",
				   "device_id":196876,
				   "resource":$["baud":[$["speed":1500000]]],
				   "rev":"0.01", "sub_class_id":0,
				   "sub_device":"Perfection640  ",
				   "scanner_driver":"test123",
				   "sub_vendor":"EPSON",
				   "unique_key":"PTVH.9Hr5DGWrbRF",
				   "vendor":"Epson",
				   "vendor_id":197816
				   ]];
    }
    Scanner::user_settings = add( Scanner::user_settings, "test_mode", true );
    Scanner::user_settings = add( Scanner::user_settings, "test_connected", connected_scanner );
    Scanner::user_settings = add( Scanner::user_settings, "test_installed", installed_scanner );
}
else
{
      Scanner::user_settings = add( Scanner::user_settings, "test_mode", false );
}

/*map cmdline_description = $[
    "id"        : "scanner",
    // Command line help text for the scanner module
    "help"      : _("Configuration of scanner"),
    "guihandler"        : ScannerSequence,
    "initialize"        : Scanner::Read,
    "finish"            : Scanner::Write,
    "actions"           : $[
    ],
    "options"           : $[
    ],
    "mapping"           : $[
    ]
];*/

/* main ui function */
any ret = ScannerSequence ();
//CommandLine::Run(cmdline_description);
y2debug("ret=%1", ret);

/* Finish */
y2milestone("Scanner module finished");
y2milestone("----------------------------------------");

return ret;


/* EOF */
}
/* EOF */
}
