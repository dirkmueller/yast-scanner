/**
 * File:
 *   scanner.ycp
 *
 * Module:
 *   Configuration of scanner
 *
 * Summary:
 *   Main file
 *
 * Authors:
 *   Gabriele Strattner <gs@suse.de>
 *
 * String corrections by Christian Steinruecken <cstein@suse.de>
 *
 * $Id$
 *
 * Main file for scanner configuration. Uses all other files.
 * 
 */

{

/***
 * <h3>Scanner Cconfiguration</h3>
 */

  textdomain "scanner";

  include "wizard/sequencer.ycp";
  include "ui/wizard_dialog.ycp";
  include "ui/common_popups.ycp";
  include "ui/common_messages.ycp";
  include "ui/common_functions.ycp";
  
  include "scanner/scanner_functions.ycp";

  include "scanner/scanner_start.ycp";
  include "scanner/scanner_new.ycp";
  include "scanner/scanner_overview.ycp";
  include "scanner/scanner_install.ycp";
  include "scanner/scanner_notfound.ycp";
  include "scanner/scanner_scsi.ycp";
  include "scanner/scanner_usb.ycp";
  include "scanner/scanner_net.ycp";
  include "scanner/scanner_manual.ycp";

  boolean test_mode = false;

/* The main() */
  y2milestone("Scanner configuration started");

// NOT USED
  map settings = ScannerRead();


  // this is the global data map
  map user_settings = $[];


  // check test_mode
  integer arg_n = size(Args()) - 1;

  symbol test_status = `installed;
  
  list arg_list = [];
  
  while (arg_n >= 0) {
      if (Args(arg_n) == .test)
      {
	  test_mode = true;
      }
      else if (Args(arg_n) == .test_new)
      {
	   test_mode = true;
	   test_status = `supported;
      }
      else if (Args(arg_n) == .test_manual)
      {
	   test_mode = true;
	   test_status = `detected;
      }
      else
      {
	  arg_list = add(arg_list, Args(arg_n));
      }
      arg_n = arg_n - 1;
  }
  
  if ( test_mode )
  {
      y2debug("Scanner TESTMODE");
      list connected_scanner = [];
      if ( test_status == `detected )
      {
	  connected_scanner = [
			       $["bus":"USB",
				  "class_id":268,
				  "device":"Perfection 640",
				  "device_id":196876,
				  "scanner_status":test_status,
				  "resource":$["baud":[$["speed":1500000]]],
				  "rev":"0.01", "sub_class_id":0,
				  "sub_device":"Perfection640  ",
				  "sub_vendor":"EPSON",
				  "unique_key":"PTVH.9Hr5DGWrbRF",
				  "vendor":"Epson",
				  "vendor_id":197816],
			       $["bus":"SCSI",
				   "class_id":268,
				   "device":"UMAX 12G",
				   "device_id":196876,
				   "resource":$["baud":[$["speed":1500000]]],
				   "rev":"0.01", "sub_class_id":0,
				   "sub_device":"UMAX 12G  ",
				   "sub_vendor":"EPSON",
				   "unique_key":"PTVH.9Hr5DGWrbRF",
				   "vendor":"UMAX",
				   "vendor_id":197816
				   ] ];
      }
      else if ( test_status == `supported )
      {
	  connected_scanner = [
			       $["bus":"USB",
				"class_id":268,
				"device":"Perfection 640",
				"device_id":196876,
				"scanner_status":test_status,
				"resource":$["baud":[$["speed":1500000]]],
				"rev":"0.01", "sub_class_id":0,
				"scanner_driver":"test123",
				"sub_device":"Perfection640  ",
				"sub_vendor":"EPSON",
				"unique_key":"PTVH.9Hr5DGWrbRF",
				"vendor":"Epson",
				"vendor_id":197816],
			       $["bus":"SCSI",
				"class_id":268,
				"device":"UMAX 12G",
				"device_id":196876,
				"resource":$["baud":[$["speed":1500000]]],
				"rev":"0.01", "sub_class_id":0,
				"sub_device":"UMAX 12G  ",
				"scanner_driver":"test456",
				"sub_vendor":"EPSON",
				"unique_key":"PTVH.9Hr5DGWrbRF",
				"vendor":"UMAX",
				"vendor_id":197816]
	  ];  
      }
      else
      {
	  connected_scanner = [
			       $["bus":"USB",
				"class_id":268,
				"device":"Perfection 640",
				"device_id":196876,
				"scanner_status":test_status,
				"resource":$["baud":[$["speed":1500000]]],
				"rev":"0.01", "sub_class_id":0,
				"sub_device":"Perfection640  ",
				"dev_name":"/dev/usbscanner",
				"sub_vendor":"EPSON",
				"unique_key":"PTVH.9Hr5DGWrbRF",
				"vendor":"Epson",
				"vendor_id":197816],
			       $["bus":"Net",		// this is a network scan station
				"class_id":268,
				"device":"Perfection 640",
				"device_id":196876,
				"scanner_status":test_status,
				"dev_name":"/dev/sg0",		// dev_name on the scan station
				"host"	: "d142",			// hostname
				"resource":$["baud":[$["speed":1500000]]],
				"rev":"0.01", "sub_class_id":0,
				"sub_device":"Perfection640  ",
				"sub_vendor":"EPSON",
				"unique_key":"PTVH.9Hr5DGWrbRF",
				"vendor":"Epson",
				"vendor_id":197816]
	  ];
      }

      list installed_scanner = [];
      if ( test_status == `supported || test_status == `detected )
      {
	  installed_scanner = [$["bus":"USB",
				   "class_id":268,
				   "device":"Perfection 641",
				   "device_id":196876,
				   "resource":$["baud":[$["speed":1500000]]],
				   "rev":"0.01", "sub_class_id":0,
				   "sub_device":"Perfection641  ",
				   "scanner_driver":"test456",
				   "sub_vendor":"EPSON",
				   "unique_key":"PTVH.9Hr5DGWrbRF",
				   "vendor":"Epson",
				   "vendor_id":197816
				   ]];
      }
      else
      {
	  installed_scanner = [$["bus":"USB",
				   "class_id":268,
				   "device":"Perfection 640",
				   "device_id":196876,
				   "resource":$["baud":[$["speed":1500000]]],
				   "rev":"0.01", "sub_class_id":0,
				   "sub_device":"Perfection640  ",
				   "scanner_driver":"test123",
				   "sub_vendor":"EPSON",
				   "unique_key":"PTVH.9Hr5DGWrbRF",
				   "vendor":"Epson",
				   "vendor_id":197816
				   ]];
      }  
      user_settings = add( user_settings, "test_mode", true ); 
      user_settings = add( user_settings, "test_connected", connected_scanner );
      user_settings = add( user_settings, "test_installed", installed_scanner ); 
  }
  else
  {
      user_settings = add( user_settings, "test_mode", false ); 
  }


/**
 * Abort dialog
 */
  global define AbortDialog() ``{
      any ret = UI(`ReallyAbortPopup(true));
      if(ret==true) return `yes;
      return `back;
  }


  UI(`CreateWizardDialog());

  map aliases = $[
		  "scanner_start"	:   ``( ScannerStartDialog() ),
		  "scanner_overview"	:   ``( ScannerOverviewDialog() ),
		  "scanner_new"		:   ``( ScannerNewDialog() ),
		  "scanner_install"	:   ``( ScannerInstallDialog() ),
		  "scanner_options"	:   ``( ScannerOptionsDialog() ),
		  "scanner_notfound"	:   ``( ScannerNotFoundDialog() ),
		  "scanner_scsi"	:   ``( ScannerSCSIDialog() ),
		  "scanner_usb"		:   ``( ScannerUSBDialog() ),
		  "scanner_net"		:   ``( ScannerNetDialog() ),
		  "scanner_manual"	:   ``( ScannerManualDialog() ),
		  "abort"              	:   ``( AbortDialog() )
  ];
    
    
  map sequence = $[
		   "ws_start"     :   "scanner_start",
		   "scanner_start":   $[
					`abort    :   "abort",
					`cancel	  :   `cancel,
					`overview :   "scanner_overview",
					`new	  :   "scanner_new",
					`notfound :   "scanner_notfound",
					`manual	  :   "scanner_manual",
					`next     :   "scanner_overview"],
		   "scanner_overview":   $[
					   `abort     	:   "abort",
					   //`edit      :   "scanner_options",
					   `new	  	:   "scanner_new",
					   `notfound 	:   "scanner_notfound",
					   `manual	:   "scanner_manual",
					   `finish	:   `ok ],	// finish
		   "scanner_new" :   $[
				       `abort     :   "abort",
				       `notfound  :   "scanner_notfound",
				       `next      :   "scanner_install"],
		   "scanner_notfound" : $[
					`scsi	:	"scanner_scsi",
					`usb   	:	"scanner_usb",
					`manual :	"scanner_manual",
					`net	:	"scanner_net",
					`start  : 	"scanner_start",
					`abort     :   "abort" ],
		   "scanner_usb"   : $[
				       `abort     :   "abort",
				       `next      :   "scanner_manual"],
		   "scanner_scsi"   : $[
				       `abort     :   "abort",
				       `next      :   "scanner_manual"],
		   "scanner_net"   : $[
				       `abort     :   "abort",
				       `next      :   "scanner_install"],
		   "scanner_manual"   : $[
				       `abort     :   "abort",
				       `next      :   "scanner_new"],
		   "scanner_install":   $[
					  `abort     :   "abort",
					  `next      :   "scanner_overview"],
		   "abort"      :   $[
				      `yes 	  :   `abort ]
  ];
    
    

  any ret = WizardSequencer(aliases, sequence);

  if ( ret == `ok )
  {
      /* info text shown at the end of module */
      string message = UI(_("Please wait while the configuration files are updated..."));
      UI(`OpenDialog(`opt(`decorated), `Label(message)));

      any ret = ScannerWrite(settings);

      y2debug("Scanner write=%1", ret );

      y2debug("Scanner finish=%1",ScannerFinish());
      UI(`CloseDialog());
  }

/* Finish */
  y2debug("Scanner module finished.");
}
