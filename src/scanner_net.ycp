/**
 * File:
 *   scanner_manual.ycp
 *
 * Module:
 *   Configuration of scanner
 *
 * Summary:
 *   
 *
 * Authors:
 *   Gabriele Strattner <gs@suse.de>
 *
 * String corrections by Christian Steinruecken <cstein@suse.de>, 2001/07/28
 *
 * $Id$
 *
 * 
 * Manual scanner detection. 
 * 
 *
 */

{

  textdomain "scanner";
  
  global define ScannerNetDialog_UI() ``{
      term layout = `VBox (
			   // This is a label, i.e. the line length should not exceed 50 characters.
			   // Please also respect the newlines (\n).
			   `Left(`Label (`opt (`hstretch), _("If you want to use a scanner from a network scan\n
station, you must supply the IP address or hostname\n
of the scan station. Please enter the requested\n
information into the field below.\n"))),
			   `VSpacing (1),
			   `HBox (
				  `HWeight(4, `TextEntry(`id(`host),
							 // Input field label for ip address or hostname
							 _("&IP address or hostname"),
							 "" )),
				  `HWeight(1, `Empty())
				  ),
			   `VSpacing (1)
			   );
      
      return layout;
  }

/**
 * ScannerStartDialog
 */
  global define ScannerNetDialog()``{
      string help = "";
      string help1    = UI(_("<p>It is possible to use a scanner which
is connected to a different computer, provided it is configured as scan station server.</p> "));
      string help2    = UI(_("<p>Enter the IP address or hostname
of that computer and click on <b>Next</b>.
</p>") );
      string help3    = UI(_("<p>More information on setting up network scan stations
can be found in the SuSE support database.</p>") );
      help = help1 + help2;
      
      string caption = UI(_("Network scan station client"));
      term contents  = ScannerNetDialog_UI();

      UI(`SetWizardContentsButtons(caption,contents,help,BackButtonLabel(),NextButtonLabel()));

      any ret = nil;

      repeat {
	  
	  ret = UI(`UserInput());

	  if ( ret == `next )
	  {
	      string host = CutBlanks( UI(`QueryWidget(`id(`host), `Value )) );

	      // Create the entry for the Network scanner
	      CreateScannerEntry( $["bus":"Net", "devicefile":host] ); 
	  }
	  
      } until ( ret == `next || ret == `back || ret == `abort );
      
      return ret;
	      
  }

}
