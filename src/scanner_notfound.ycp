/**
 * File:
 *   scanner_notfound.ycp
 *
 * Module:
 *   Configuration of scanner
 *
 * Summary:
 *   
 *
 * Authors:
 *   Gabriele Strattner <gs@suse.de>
 *
 * String corrections by Christian Steinruecken <cstein@suse.de> 2001/07/28
 *
 * $Id$
 * 
 * Notfound dialog. 
 * 
 *
 */

{
  textdomain "scanner";

  global define ScannerNotFoundDialog_UI() ``{

      term layout = `Empty();

      layout = `VBox( `Label(`opt (`hstretch), _("Your scanner was not detected automatically -
manual configuration is required.")),
		      `VSpacing(1.5),
		      `HBox(`HSpacing(0.5),
			    `Frame (_("Select the scanner type"),
				    `RadioButtonGroup(`id(`scanner),
						      `VBox(`VSpacing (0.6),
							    `Left(`RadioButton(`id(`usb),`opt (`hstretch),
									       _("&USB scanner"), true) ),
							    `VSpacing (0.6),
							    `Left(`RadioButton(`id(`scsi),`opt(`hstretch),
									       _("&SCSI scanner"),  false) ),
							    `VSpacing (1.2),
							    `Left(`RadioButton(`id(`net),`opt(`hstretch),
									       _("&Network scan station") ,  false) ),
							    `VSpacing (0.6)
							    )
						      )
				    ),
			    `HSpacing(3.0)
			    ),
		      `VSpacing(1.0)
		      );
      return layout;
  }

/**
 * ScannerNotFoundDialog
 */
  global define ScannerNotFoundDialog()``{
      string help = "";
      // help of Manual Scanner Configuration (start)
      string help1    = UI(_("<p>Please make sure your scanner is
properly connected and switched on.</p> "));

       // help of Manual Scanner Configuration (continued)
      string help2    = UI(_("<p><i><b>Attention!</b></i> Do NOT connect or disconnect SCSI scanners
on a running system - if you want to connect a SCSI scanner, choose
<b>Abort</b> and shutdown your system first.</p>"));

      // help of Manual Scanner Configuration (continued)
      string help3    = UI(_("<p>USB scanners may be plugged in and switched on
while the system is running. If you have not yet connected your USB scanner, do so right now.
</p>"));

      // help of Manual Scanner Configuration (continued)
      string help4    = UI(_("<p>YaST2 provides assistance for manual
USB and SCSI scanner configuration. You can also use
a scanner from a network scan station.</p>"));

       // Note for translators: YaST2 does not yet provide the functionality to
       // configure more than one USB scanner. In theory, however, it *is* possible.
       // help of Manual Scanner configuration (continued)
       string help5    = UI(_("<p>Please note: you cannot configure or use more than <i>one</i> USB
scanner at the same time.</p>"));

      help = help1 + help2 + help3 + help4 + help5;
      
      string caption = UI(_("Manual scanner configuration"));
      term contents  = ScannerNotFoundDialog_UI();

      UI(`SetWizardContentsButtons(caption,contents,help,BackButtonLabel(),NextButtonLabel()));

      any ret = nil;
      boolean go_on = true;

      while ( go_on )
      {
	  go_on = true;
	  
	  ret = UI(`UserInput());

	  if ( ret == `next || ret == `abort || ret == `back )
	  {
	      go_on = false;
	  }
	  
	  if ( ret == `next )
	  {
	      symbol type = UI(`QueryWidget(`id(`scanner), `CurrentButton));
	      y2debug("TYPE: %1", type );

	      if ( type == `usb )
	      {
                  // try again to detect an USB scanner (maybe it is switched on now)
		  list connected_scanner = SCR(`Read(.probe.scanner));

		  string msg = _("Please disconnect all unwanted USB scanners
and restart the scanner configuration.");

                  // we support only ONE USB scanner
		  if ( size (connected_scanner) > 1 )
		  {
		      // text of a warning popup
		      UI(`WarningPopup(_("YaST2 has detected several USB scanners, 
but you can only use ONE of them.") + "\n" + msg));
		      ret = `cancel;
		  }
		  else if ( CheckUSBScanner() )
		  {
		      // text of a warning popup
		      UI(`WarningPopup(_("There is already an USB scanner in use.
It is not possible to configure an additional
USB scanner, because only ONE is supported.") + "\n" + msg));
		      ret = `cancel;
		  }
		  else if ( size (connected_scanner) == 1 )
		  {
		      // start again with scanner start dialog
		      // TODO ? sollte immer funktionieren ?
		      //    -> scanner jetzt eingesteckt/aber bereits installiert -> overview
		      //	-> scanner neu, scanner nicht unterstützt -> manual
		      //	-> scanner neu und unterstützt -> new
		      user_settings = add(user_settings, "check_again", true);
		      ret = `start;
		  }
		  else
		  {
		      integer exit_status = 1;

		      // check first, whether an USB scanner module is already loaded
		      exit_status = SCR (`Execute (.target.bash, "/sbin/lsmod | /bin/egrep 'scanner|microtek'"));
		      
		      if ( exit_status != 0 )
		      {
			  // go to dialog load USB module if the module is not yet loaded
			  ret = `usb;
		      }
		      else
		      {
			  // If the USB module is already loaded we assume that it is the right one,
			  // because the scanner module will be unloaded, if the USB scanner is
			  // disconnected and newly loaded when a new scanner is connected (hotplug).
			  // -> go to manual scanner selection
			  ret = `manual;
		      }
		      // create the entry for the USB scanner
		      CreateScannerEntry( $["bus":"USB", "dev_name":"/dev/usbscanner"]);
		      
		  }
	      }
	      else
	      {
		  ret = type;
	      }
	  }
      };

      return ret;
  }

}
