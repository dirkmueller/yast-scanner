/**
 * File:
 *   scanner_notfound.ycp
 *
 * Module:
 *   Configuration of scanner
 *
 * Summary:
 *   
 *
 * Authors:
 *   Gabriele Strattner <gs@suse.de>
 *
 * String corrections by Christian Steinruecken <cstein@suse.de> 2001/07/28
 *
 * $Id$
 * 
 * Notfound dialog. 
 * 
 *
 */

{
  textdomain "scanner";

  import "Label";
    
  global define ScannerNotFoundDialog_UI() ``{

      term layout = `Empty();

      // This is a label, i.e. the line length should not exceed 50 characters.
      // Inform the user that a manual configuration is necessary.
      layout = `VBox( `Label(`opt (`hstretch), _("Your scanner was not detected automatically -
manual configuration is required.")),
		      `VSpacing(1.5),
		      `HBox(`HSpacing(0.5),
			    // label of a frame with radiobuttons
			    `Frame (_("Select the scanner type"),
				    `RadioButtonGroup(`id(`scanner),
						      `VBox(`VSpacing (0.6),
							    `Left(`RadioButton(`id(`usb),`opt (`hstretch),
									       // radiobutton1 - scanner connected to USB bus
									       _("&USB scanner"), true) ),
							    `VSpacing (0.6),
							    `Left(`RadioButton(`id(`scsi),`opt(`hstretch),
									       // radiobutton2 - scanner connected to SCSI
									       _("&SCSI scanner"),  false) ),
    							    `VSpacing (0.6),
							    `Left(`RadioButton(`id(`ptal),`opt(`hstretch),
									       // radiobutton3 - Hewlett-Packard multi functional
									       // devices; german: Multifunktionsgeräte
									       _("&HP OfficeJet All-in-One"),  false) ),
							    `VSpacing (1.2),
							    `Left(`RadioButton(`id(`net),`opt(`hstretch),
									       // radiobutton4 - network scanner
									       _("N&etwork scan station") ,  false) ),
							    `VSpacing (0.6)
							    )
						      )
				    ),
			    `HSpacing(3.0)
			    ),
		      `VSpacing(1.0)
		      );
      return layout;
  }

/**
 * ScannerNotFoundDialog
 */
  global define ScannerNotFoundDialog()``{
      string help = "";
      // help of Manual Scanner Configuration (start)
      string help1    = _("<p>Please make sure your scanner is
properly connected and switched on.</p> ");

       // help of Manual Scanner Configuration (continued)
      string help2    = _("<p><i><b>Attention!</b></i> Do NOT connect or disconnect SCSI scanners
on a running system - if you want to connect a SCSI scanner, choose
<b>Abort</b> and shutdown your system first.</p>");

      // help of Manual Scanner Configuration (continued)
      string help3    = _("<p>USB scanners may be plugged in and switched on
while the system is running. If you have not yet connected your USB scanner, do so right now.
</p>");

      // help of Manual Scanner Configuration (continued)
      string help4    = _("<p>YaST2 provides assistance for manual
USB and SCSI scanner configuration as well as for Hewlett-Packard
all-in-one devices (e.g., hp psc 2200 series). You can also use
a scanner from a network scan station.</p>
");

       // Note for translators: the functionality to configure more than one USB scanner
       // is not yet provided. In theory, however, it *is* possible.
       // help of Manual Scanner configuration (continued)
       string help5    = _("<p>Please note: you cannot configure or use more than <i>one</i> USB
scanner at the same time.</p>");

      help = help1 + help2 + help3 + help4 + help5;

      // headline of the dialog
      string caption = _("Manual scanner configuration");
      term contents  = ScannerNotFoundDialog_UI();

      Wizard::SetContentsButtons(caption,contents,help,Label::BackButton(),Label::NextButton());

      any ret = nil;
      boolean go_on = true;

      while ( go_on )
      {
	  go_on = true;
	  
	  ret = UI::UserInput();

	  if ( ret == `next || ret == `abort || ret == `back || ret == `cancel )
	  {
	      go_on = false;
	  }
	  
	  if ( ret == `next )
	  {
	      symbol type = UI::QueryWidget(`id(`scanner), `CurrentButton);
	      y2milestone("Selected Scanner type: %1", type );

	      if ( type == `usb )
	      {
                  // try again to detect an USB scanner (maybe it is switched on now)
		  list connected_scanner = SCR::Read(.probe.scanner);
		  list usb_scanner = filter( `scanner, connected_scanner,
					      ``( scanner["bus"]:"" == "USB" ) );
		  
                  // text part 2 of the warning popup - disconnect unused scanners
		  string msg = _("Please disconnect all unwanted USB scanners
and restart the scanner configuration.");

                  // we support only ONE USB scanner
		  if ( size (usb_scanner) > 1 )
		  {
		      // text part 1 of the warning popup - disconnect unused scanners
		      Popup::Warning(_("YaST2 has detected several USB scanners, 
but you can only use ONE of them.") + "\n" + msg);
		      ret = `back;
		  }
		  else if ( CheckUSBScanner() )
		  {
		      // text of a warning popup
		      Popup::Warning(_("There is already an USB scanner in use.
It is not possible to configure an additional
USB scanner, because only ONE is supported.") + "\n" + msg);
		      ret = `back;
		  }
		  else if ( size (usb_scanner) == 1 )
		  {
		      // start again with scanner start dialog
		      // TODO ? sollte immer funktionieren ?
		      //    -> scanner jetzt eingesteckt/aber bereits installiert -> overview
		      //	-> scanner neu, scanner nicht unterstützt -> manual
		      //	-> scanner neu und unterstützt -> new
		      user_settings = add(user_settings, "check_again", true);
		      ret = `start;
		  }
		  else
		  {
		      integer exit_status = 1;

		      // check first, whether an USB scanner module is already loaded
		      exit_status = SCR::Execute (.target.bash, "/sbin/lsmod | /bin/egrep 'scanner|microtek'");
		      
		      if ( exit_status != 0 )
		      {
			  // go to dialog load USB module if the module is not yet loaded
			  ret = `usb;
		      }
		      else
		      {
			  // If the USB module is already loaded we assume that it is the right one,
			  // because the scanner module will be unloaded, if the USB scanner is
			  // disconnected and newly loaded when a new scanner is connected (hotplug).
			  // -> go to manual scanner selection
			  ret = `manual;
		      }
		      // create the entry for the USB scanner
		      CreateScannerEntry( $["bus":"USB", "dev_name":"/dev/usbscanner"]);
		      
		  }
	      }
	      else if ( type == `ptal )
	      {
		  // check whether the package hp-officeJet is installed
		  boolean installed = CheckOfficeJet();
		  if ( !installed )
		  {
		      ret = `cancel;
		      continue;
		  }
		      
		  // call ptal-init setup
		  integer exitcode = SCR::Execute (.target.bash, "ptal-init setup-usb 2>&1 > /dev/null" );

		  if ( exitcode != 0 )
		  {
		      y2error( "command 'ptal-init setup-usb' failed" );
		      // Text of an error popup. YaST2 automatically detects USB
		      // connected devices, if connected to JetDirect or parallel
		      // the user has to do the configuration manually.
		      Popup::Error(_("No HP all-in-one device detected.
Make sure that the device is switched on and try again.\n
In case of a JetDirect connection or parallel-connected
device abort the scanner configuration and call
'ptal-init setup' manually. Configure the scanner by enabling
the 'hpoj' driver in '/etc/sane.d/dll.conf'
(you must be \"root\" to do this).\n\n") );
		      go_on = true;
		  }

		  list ptal_scanner = SCR::Read(.scanner.ptal);
		  y2milestone( "HP all-in-one devices: %1", ptal_scanner );

		  if ( size (ptal_scanner) > 1 )
		  {
		      map scanners = $[];
		      integer no = 0;
		      foreach ( `scanner, ptal_scanner, ``{
			  scanners = add( scanners, no, scanner );
			  no = no+1;
		      }	);
		      // headline for a popup
		      integer id = DisplayScannerList( scanners, _("List of HP all-in-one devices") );
		      CreateScannerEntry( scanners[id]:$[] );
		      ret = `manual;
		  }
		  else if ( size (ptal_scanner) == 1 )
		  {
		      CreateScannerEntry( ptal_scanner[0]:$[]);
		      ret = `manual;
		  }
	      }
	      else
	      {
		  y2debug( "Returning type %1", type );
		  ret = type;
	      }
	  }
      };

      return ret;
  }

}
