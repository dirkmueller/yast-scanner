/**
 * File:
 *   scanner_install.ycp
 *
 * Module:
 *   Configuration of scanner
 *
 * Summary:
 *   
 *
 * Authors:
 *   Gabriele Strattner <gs@suse.de>
 *
 * String corrections by Christian Steinruecken <cstein@suse.de>, 2001/07/27
 *
 * $Id$
 *
 * Installation of the scanner.
 * 
 *
 */

{
  textdomain "scanner";
  include "ui/summary.ycp";
  
/**
 * ScannerInstallDialog
 */

  global define ScannerInstallDialog_UI( map installed_scanner, byteblock image ) ``{

      string scanner = "";
      string info = "";
      string label = "";
      
      if ( lookup( installed_scanner, "bus", "" ) == "Net" )
      {
	  scanner = lookup(installed_scanner, "device", []);
	  info = lookup(installed_scanner, "host", "");
	  
	  // label of an outfield showing the IP address of the scanstation
	  label = _("Scanstation");
      }
      else
      {
	  // label of an outfield showing the device file, e.g. /dev/sg0
	  label = _("Device");
	  scanner = lookup( installed_scanner, "vendor", "" ) + " - " + lookup(installed_scanner, "device", "" );
	  info = lookup(installed_scanner, "dev_name", "");
      }
	   
	  

      term contents = `HBox (
			 `VBox (
			     // label of an outpufield
			     `Left(`Label (`opt (`hstretch), _("Scanner"))),
			     `VSpacing(0.3),
			     `HBox (`HSpacing(2.5),
				    `HWeight(5, `Label (`opt (`outputField, `hstretch), scanner)),
				    `HWeight(1, `Empty())
				    ),
			     `VSpacing(0.5),
			     `Left(`Label (`opt (`hstretch), label)),
			     `VSpacing(0.3),
			     `HBox (`HSpacing(2.5),
				    `HWeight(5, `Label (`opt (`outputField, `hstretch),
							info )),
				    `HWeight(1, `Empty())
				    ),
			     `VSpacing (1),
			     `PushButton (`id (`test), _("&Test"))
			   ),
			 
				    `ReplacePoint(`id(`replace),`Image( image, _("Test picture")) ),
				    `HSpacing (2.0)
				    );

      return contents;
  }

/**
 * ScannerInstallDialog
 */
  global define ScannerInstallDialog()``{
      string help    = "";
      
      // help part 1 of dialog scanner test
      string help1    = _("<p>Your new scanner was installed
successfully.</p>");
      // help part 2 of dialog scanner test
      string help2    = _("<p>You can test the scanner now.
Insert a test page and click on the <b>Test</b> button.
Press <b>Next</b> to finish the installation.</p>");
      // help part 3 of dialog scanner test
      string help3    = _("<p>The program <b>xscanimage</b>
from package <i>sane</i> (already installed) provides
basic functionality for scanning.</p>");
      // help part 4 of dialog scanner test
      string help4 = _("<p><b>xsane</b>
(requires installation of the package <i>xsane</i>)
offers more scan- and image processing functionality.
The <b>Gimp</b> also provides scan support.</p>");
      
      help = help1 + help2 + help3 + help4;
      
      string caption = _("Scanner Test");

      term contents  = ScannerInstallDialog_UI( GetCurrentScanner(),
						Read( .local.byte,
						      "/usr/share/doc/packages/sane/sane-backends/umax/sane-logo2.jpg"));

      //"/usr/lib/YaST2/images/lvm-config.png"

      UI(`SetWizardContentsButtons(caption,contents,help,BackButtonLabel(),NextButtonLabel()));

      any ret = nil;

      repeat {

	  ret = UI(`UserInput());

	  term image = `Empty();

	  // TODO also do the test when clicking NEXT
	  if ( ret == `test )
	  {
	      map scanner = GetCurrentScanner();
	      scanner = add( scanner, "tmpdir", SCR( `Read(.target.tmpdir)));
	      string filename = SCR(`Read(.sane.scanimage, GetCurrentScanner()));
	      if ( filename != "" )
	      {
		  byteblock image_data = Read(.local.byte, filename);
		  image = `Image(  image_data, _("Test picture"));

		  UI( `ReplaceWidget(`id(`replace), image ));
		  if( ! Execute (.target.remove, filename ) )
		  {
		      y2debug( "Could not delete tmp-file" );
		  }
	      }
	  }
	  
      } until ( ret == `next || ret == `back || ret == `abort );
      
      return ret;
  }

}
